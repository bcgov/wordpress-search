(()=>{"use strict";var e={n:t=>{var s=t&&t.__esModule?()=>t.default:()=>t;return e.d(s,{a:s}),s},d:(t,s)=>{for(var a in s)e.o(s,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:s[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window.wp.blocks,s=window.wp.data,a=window.wp.element,r=window.wp.coreData,n=window.wp.components,o=window.wp.i18n,l=window.wp.blockEditor,i=window.wp.url,d=window.wp.apiFetch;var c=e.n(d);const p=window.ReactJSXRuntime,_=["attachment","wp_block","wp_template","wp_template_part","wp_navigation","wp_font_face","wp_font_family","menu_item","wp_global_styles","revision","customize_changeset","nav_menu_item","custom_css","oembed_cache"],w=["document_file_id","document_file_name","document_file_size","document_file_type","document_file_url","footnotes","show_inpage_nav"];(0,t.registerBlockType)("wordpress-search/search-metadata-filter",{edit:function({attributes:e,setAttributes:t}){const{selectedMetadata:d}=e,[u,h]=(0,a.useState)([]),[m,f]=(0,a.useState)(!0),v=(0,l.useBlockProps)({className:"wp-block-wordpress-search-metadata-filter-editor"}),{postTypes:b}=(0,s.useSelect)((e=>{const t=e(r.store).getPostTypes({per_page:-1}),s=t?.filter((e=>{const t=_.includes(e.slug),s=Boolean(e.rest_base)&&Boolean(e.rest_namespace),a=!0===e.supports?.["custom-fields"];return!t&&s&&a}));return{postTypes:s}}),[]);return(0,a.useEffect)((()=>{!async function(){if(!b)return;const e=new Set,t=b.map((async e=>{try{const t="wp/v2"===e.rest_namespace?`/wp/v2/${e.rest_base}`:`/${e.rest_namespace}/${e.rest_base}`,s={context:"edit",per_page:1,orderby:"date",order:"desc"},a=(0,i.addQueryArgs)(t,s),r=await c()({path:a,parse:!0});if(Array.isArray(r)&&r.length>0){const t=r[0];return Object.keys(t.metadata||t.meta||{}).filter((e=>!w.includes(e))).map((t=>({label:t,value:`${e.slug}:${t}`})))}return[]}catch(e){return[]}}));try{(await Promise.all(t)).flat().forEach((t=>{e.add(t)}))}catch(e){}const s=Array.from(e).sort(((e,t)=>e.label.localeCompare(t.label)));h(s),f(!1)}()}),[b]),(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(l.InspectorControls,{children:(0,p.jsxs)(n.PanelBody,{title:(0,o.__)("Metadata Filter Settings","wordpress-search"),initialOpen:!0,children:[m&&(0,p.jsxs)(n.Placeholder,{children:[(0,p.jsx)(n.Spinner,{}),(0,o.__)("Loading metadata fields…","wordpress-search")]}),!m&&u.length>0&&(0,p.jsx)(n.SelectControl,{label:(0,o.__)("Select Metadata Field","wordpress-search"),value:d,options:[{label:(0,o.__)("Select a field…","wordpress-search"),value:""},...u],onChange:e=>t({selectedMetadata:e})}),!m&&0===u.length&&(0,p.jsxs)("p",{children:[(0,o.__)("No metadata fields found. Make sure your post types:","wordpress-search"),(0,p.jsxs)("ul",{children:[(0,p.jsx)("li",{children:(0,o.__)("Have custom fields enabled","wordpress-search")}),(0,p.jsx)("li",{children:(0,o.__)("Have REST API support","wordpress-search")}),(0,p.jsx)("li",{children:(0,o.__)("Have at least one post with meta values","wordpress-search")}),(0,p.jsx)("li",{children:(0,o.__)("Have meta fields registered with show_in_rest enabled","wordpress-search")})]})]})]})}),(0,p.jsxs)("div",{...v,children:[m&&(0,p.jsxs)("div",{className:"metadata-filter-loading",children:[(0,p.jsx)(n.Spinner,{}),(0,o.__)("Loading metadata options…","wordpress-search")]}),!m&&d&&(0,p.jsxs)("div",{className:"metadata-filter-preview",style:{pointerEvents:"none"},children:[(0,o.__)("Metadata Filter:","wordpress-search")," ",(0,p.jsx)("strong",{children:(()=>{if(!d)return"";const e=u.find((e=>e.value===d));return e?e.label:d})()})]}),!m&&!d&&(0,p.jsx)("div",{className:"metadata-filter-placeholder",style:{pointerEvents:"none"},children:(0,o.__)("Select a metadata field in the block settings sidebar →","wordpress-search")})]})]})},save:()=>null})})();