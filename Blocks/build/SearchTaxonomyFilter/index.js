(()=>{"use strict";const e=window.wp.blocks,t=window.wp.i18n,o=window.wp.data,s=window.wp.components,n=window.wp.blockEditor,r=window.ReactJSXRuntime,i=JSON.parse('{"$schema":"https://schemas.wp.org/trunk/block.json","apiVersion":3,"name":"wordpress-search/search-taxonomy-filter","version":"1.0.0","title":"Taxonomy Filter","category":"search","icon":"filter","description":"A modular search taxonomy filter block that connects to the search page template","attributes":{"selectedTaxonomy":{"type":"string","default":""}},"editorScript":"file:./index.js","editorStyle":"file:./index.css","viewStyle":"file:./view.css","viewScript":"file:./view.js","render":"file:./render.php","style":"file:./view.css","dependencies":["wp-api-fetch","wp-url","wp-components","wp-element","wp-i18n"]}');(0,e.registerBlockType)(i.name,{...i,edit:function({attributes:e,setAttributes:i}){const{selectedTaxonomy:a}=e,{taxonomies:l}=(0,o.useSelect)((e=>{const{getTaxonomies:t}=e("core");return{taxonomies:t({per_page:-1,context:"view"})||[]}}),[]),c=[{label:(0,t.__)("Select a taxonomyâ€¦","wordpress-search"),value:""},...(l||[]).filter((e=>!!e)).map((e=>{if(!e.types||!e.types[0])return null;const o=e.labels?.singular_name||e.name||(0,t.__)("Unknown","wordpress-search"),s=`${e.types[0]}:${e.name}`;return{label:o.charAt(0).toUpperCase()+o.slice(1),value:s}})).filter(Boolean)];return(0,r.jsx)("div",{...(0,n.useBlockProps)(),children:(0,r.jsx)(s.SelectControl,{label:(0,t.__)("Select Taxonomy","wordpress-search"),value:a,options:c,onChange:e=>{i({selectedTaxonomy:e})}})})}})})();